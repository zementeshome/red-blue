[{"/Users/zementeshome/red-blue/client/src/index.js":"1","/Users/zementeshome/red-blue/client/src/reportWebVitals.js":"2","/Users/zementeshome/red-blue/client/src/App.js":"3","/Users/zementeshome/red-blue/client/src/components/Login/Login.jsx":"4","/Users/zementeshome/red-blue/client/src/components/Home/Home.jsx":"5","/Users/zementeshome/red-blue/client/src/fire.js":"6"},{"size":500,"mtime":1611529330081,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1611529330082,"results":"9","hashOfConfig":"8"},{"size":485,"mtime":1611588083973,"results":"10","hashOfConfig":"8"},{"size":5770,"mtime":1611544745851,"results":"11","hashOfConfig":"8"},{"size":703,"mtime":1611588856147,"results":"12","hashOfConfig":"8"},{"size":666,"mtime":1611546099661,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"19fgdrv",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/zementeshome/red-blue/client/src/index.js",[],["29","30"],"/Users/zementeshome/red-blue/client/src/reportWebVitals.js",[],"/Users/zementeshome/red-blue/client/src/App.js",[],"/Users/zementeshome/red-blue/client/src/components/Login/Login.jsx",["31","32","33"],"import React, {useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport fire from '../../fire';\nimport Cookies from 'js-cookie';\nimport './Login.scss';\n\nfunction Login() {\n\n  const [, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState ('');\n  const [emailError, setEmailError] = useState ('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInput = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const authorizeListener = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n        clearInput();\n      } else {\n        setUser('')\n      }\n    });\n  };\n\n  useEffect(() => {\n   authorizeListener();\n  },[]);\n\n//   fire.auth().setPersistence(fire.auth.Auth.Persistence.NONE);\n\n    const history = useHistory();\n\n    const handleSignUp = (e) => {\n        e.preventDefault()\n        clearErrors();\n            fire\n            .auth()\n            .createUserWithEmailAndPassword(email,password)\n            .then(({ user }) => {\n                return user.getIdToken().then((idToken) => {\n                    return fetch('/sessionLogin', {\n                        method: 'POST',\n                        headers: {\n                            Accept: \"application/json\",\n                            \"Content-Type\": \"application/json\",\n                            \"CSRF-Token\": Cookies.get(\"XSRF-TOKEN\"),\n                        },\n                        body: JSON.stringify({ idToken })\n                    })\n                })\n            })\n        .then(() => {\n            history.push('/home');\n          })\n          .catch((err) => {\n            switch (err.code) {\n              case \"auth/email-already-in-use\":\n              case \"auth/invalid-email\":\n                setEmailError(err.message);\n                break;\n              case \"auth/weak-password\":\n                setPasswordError(err.message);\n                break;\n            }\n          });\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        clearErrors();\n            fire\n            .auth()\n            .signInWithEmailAndPassword(email,password)\n            .then(({ user }) => {\n                return user.getIdToken().then((idToken) => {\n                    return fetch('/sessionLogin', {\n                        method: 'POST',\n                        headers: {\n                            Accept: \"application/json\",\n                            \"Content-Type\": \"application/json\",\n                            \"CSRF-Token\": Cookies.get(\"XSRF-TOKEN\"),\n                        },\n                        body: JSON.stringify({ idToken })\n                    })\n                })\n            })\n        .then(() => {\n            history.push('/home');\n          })\n          .catch((err) => {\n            switch(err.code) {\n              case \"auth/invalid-email\":\n              case \"auth/user-disabled\":\n              case \"auth/user-not-found\":\n                setEmailError(err.message);\n                break;\n              case \"auth/wrong-password\":\n                setPasswordError(err.message);\n                break;\n            }\n          });\n    }\n    return (\n        <section className=\"login\">\n            <div className=\"login__container\">\n            <h1 className=\"login__header\">earth or mars</h1>\n            {!hasAccount ? (\n                <form className=\"login__sign-in\">\n                    <label className=\"login__label\">username</label>\n                    <input className=\"login__input\" type=\"text\" autoFocus required value={email} onChange={(e) => setEmail(e.target.value)}></input>\n                    <p className=\"login__email-error\">{emailError}</p>\n                    <label className=\"login__label\">password</label>\n                    <input className=\"login__input\" type=\"password\" required value={password}onChange={(e) => setPassword(e.target.value)}></input>\n                    <p className=\"login__password-error\">{passwordError}</p>\n                    <div className=\"login__button-div\">\n                <button className=\"login__button\" onClick={handleLogin}>sign in</button>\n                </div>\n                <div className=\"login__signup-container\">\n                             <p className=\"login__sign-up\">don't have an account?<span onClick={() => setHasAccount(!hasAccount)}>sign up</span></p>\n                         </div>\n                </form>\n            ) : (\n            <form className=\"login__sign-up\">\n                <label className=\"login__label\">username(email)</label>\n                <input className=\"login__input\" type=\"text\" autoFocus required value={email} onChange={(e) => setEmail(e.target.value)} ></input>\n                <p className=\"login__email-error\">{emailError}</p>\n                <label className=\"login__label-2\">password</label>\n                <input className=\"login__input\" type=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)}></input>\n                <p className=\"login__password-error\">{passwordError}</p>\n                <div className=\"login__button-div\">\n                <button className=\"login__button\" onClick={handleSignUp}>sign up</button>\n                </div>\n                <div className=\"login__signup-container\">\n                                <p className=\"login__sign-in\">have an account?<span onClick={() => setHasAccount(!hasAccount)}>sign in</span></p>\n                            </div>\n            </form>\n             )}\n            </div>\n        </section>\n    )\n}\n\nexport default Login;\n","/Users/zementeshome/red-blue/client/src/components/Home/Home.jsx",[],"/Users/zementeshome/red-blue/client/src/fire.js",[],["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":39,"column":5,"nodeType":"42","endLine":39,"endColumn":7,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":68,"column":13,"nodeType":"46","messageId":"47","endLine":76,"endColumn":14},{"ruleId":"44","severity":1,"message":"45","line":103,"column":13,"nodeType":"46","messageId":"47","endLine":112,"endColumn":14},{"ruleId":"36","replacedBy":"48"},{"ruleId":"38","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authorizeListener'. Either include it or remove the dependency array.","ArrayExpression",["52"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["50"],["51"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [authorizeListener]",{"range":"55","text":"56"},[908,910],"[authorizeListener]"]